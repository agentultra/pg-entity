name: CI

# Trigger the workflow on push or pull request, but only for the main branch
on:
  pull_request:
  push:
    branches: ["main"]

jobs:
  cabal:
    name: ${{ matrix.os }} / ghc ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        cabal: ["3.4.0.0"]
        ghc: ["8.8.4", "8.10.4"]

    steps:
    - uses: actions/checkout@v2
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/main'

    - uses: haskell/actions/setup@v1
      id: setup-haskell-cabal
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}
    - name: Prepare environment
      run: .github/workflows/setup_ci_env.sh

    - name: Configure environment
      run: |
          echo '/usr/lib/postgresql/13/bin/' >> $GITHUB_PATH
          echo "/nix/var/nix/profiles/per-user/$USER/profile/bin" >> "$GITHUB_PATH"
          echo "/nix/var/nix/profiles/default/bin" >> "$GITHUB_PATH"
          echo 'NIX_PATH="nixpkgs=channel:nixos-unstable"' >> "$GITHUB_ENV"
          echo '$HOME/.ghcup/bin' >> $GITHUB_PATH
          echo 'HOME/.cabal/bin' >> $GITHUB_PATH
          echo 'HOME/.local/bin' >> $GITHUB_PATH

    - name: Install Nix
      run: ./.github/workflows/install-nix.sh

    - name: Configure
      run: nix-shell --run 'cabal configure --enable-tests --enable-benchmarks --test-show-details=direct --disable-optimization --with-compiler="ghc-${{ matrix.ghc }}"' 

    - name: Freeze
      run: nix-shell --run 'cabal freeze'
 
    - uses: actions/cache@v2
      name: Cache ~/.cabal/store and .ghcup
      with:
        path: |
          ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}

    - name: Installing dependencies 
      run: nix-shell --run 'make deps'

    - name: Running hlint
      run: nix-shell --run './.github/workflows/hlint-runner.sh'

    - name: Running stylish-haskell
      run: nix-shell --run './.github/workflows/stylish-haskell-runner.sh'

    - name: Build
      run: nix-shell --run 'make build'

    # - name: Docspecs
    #   if: matrix.os == 'ubuntu-latest' && matrix.ghc == '8.10.4'
    #   run: |
    #     mkdir -p $HOME/.local/bin
    #     wget https://github.com/phadej/cabal-extras/releases/download/cabal-docspec-0.0.0.20210111/cabal-docspec-0.0.0.20210111.xz -O ./cabal-docspec.xz
    #     ls -lah
    #     unxz ./cabal-docspec.xz
    #     mv cabal-docspec $HOME/.local/bin
    #     chmod +x $HOME/.local/bin/cabal-docspec
    #     $HOME/.local/bin/cabal-docspec

    - name: Test
      run: nix-shell --run 'cabal test all'
